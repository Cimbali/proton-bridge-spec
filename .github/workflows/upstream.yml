name: Upstream to OpenBuildService

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: opensuse/tumbleweed

    steps:
      - name: Install most basic dependencies
        run: |
          zypper install -y jq unzip git rpm-build rpmlint osc spec-cleaner obs-service-go_modules

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          path: git

      - name: Download files
        run: |
          version=`sed -n '/^Version:/{s/.*: *//p;q}' git/protonmail-bridge.spec`
          git/update.sh "v$version"
        env:
          DESTDIR: dl
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update files in OpenBuildService repo
        run: |
          trap 'rm -f ./osc-config' EXIT && echo "$OPENBUILDSERVICE_TOKEN_SECRET" > ./osc-config
          osc --config ./osc-config co -o osc home:cimbali protonmail-bridge

          awk -F : '$1 ~ /(Source|Patch)[0-9]/ { sub(/: +/, ":") ; print $2 }' osc/protonmail-bridge.spec > old
          awk -F : '$1 ~ /(Source|Patch)[0-9]/ { sub(/: +/, ":") ; print $2 }' git/protonmail-bridge.spec > new

          while read f; do
            if [ -f "git/$f" ]; then cp "git/$f" "osc/$f"; else cp "dl/$f" "osc/$f"; fi
            grep -qxF "$f" old || osc --config ./osc-config add "osc/$f"
          done < new
          grep -Fvxf new old | while read f; do osc --config ./osc-config rm "osc/$f"; done

          src0=`awk -F : '$1 == "Source0" { sub(/: +/, ":") ; print $2 }' git/protonmail-bridge.spec`
          /usr/lib/obs/service/go_modules --archive "dl/$src0" --outdir "$PWD/osc/"
          sed -i "s,\\(<param name=\"archive\">\\).*\\(</param>\\),\\1$src0\\2," osc/_service

          spec-cleaner git/protonmail-bridge.spec > osc/protonmail-bridge.spec
          cp git/protonmail-bridge.changes osc/protonmail-bridge.changes
        env:
          OPENBUILDSERVICE_TOKEN_SECRET: ${{ secrets.OPENBUILDSERVICE_TOKEN_SECRET }}

      - name: Lint specfile
        run: rpmlint osc/protonmail-bridge.spec
        continue-on-error: true

      - name: Build source RPM
        id: srpm
        run: |
          rpmbuild -D "_topdir $PWD/rpmbuild" -D "_sourcedir $PWD/osc" -D "_srcrpmdir $PWD" -bs "osc/protonmail-bridge.spec"

          filename=`rpm -q --qf "%{name}-%{version}-%{release}.src.rpm" --specfile osc/protonmail-bridge.spec`
          echo "filename=$filename" | tee -a $GITHUB_OUTPUT

      - name: Lint source RPM
        run: rpmlint "${{ steps.srpm.outputs.filename }}"
        continue-on-error: true

      - name: Build binary RPM
        id: rpm
        run: |
          zypper install -y --allow-downgrade --allow-vendor-change `rpm -qR "${{ steps.srpm.outputs.filename }}"`
          rpmbuild -D "_topdir $PWD/rpmbuild" -D "_rpmdir $PWD" -rb "${{ steps.srpm.outputs.filename }}"

          filename=`rpm -q --qf "%{arch}/%{name}-%{version}-%{release}.%{arch}.rpm" --specfile osc/protonmail-bridge.spec`
          echo "filename=$filename" | tee -a $GITHUB_OUTPUT

      - name: Lint binary RPM
        run: rpmlint "${{ steps.rpm.outputs.filename }}"
        continue-on-error: true

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          path: |
            ${{ steps.srpm.outputs.filename }}
            ${{ steps.rpm.outputs.filename }}

      - name: Install binary RPM
        run: |
          zypper install -y --allow-unsigned-rpm "${{ steps.rpm.outputs.filename }}"

      - name: Try running binary
        run: |
          protonmail-bridge --cli <<<exit

      - name: Push to OpenBuildService
        run: |
          trap 'rm -f ./osc-config' EXIT && echo "$OPENBUILDSERVICE_TOKEN_SECRET" > ./osc-config
          if [ `osc --config ./osc-config status osc/ | wc -l` -gt 0 ]; then
            osc --config ./osc-config ci -m "`git -C git log -1 --pretty=%s`" osc/
          fi
        env:
          OPENBUILDSERVICE_TOKEN_SECRET: ${{ secrets.OPENBUILDSERVICE_TOKEN_SECRET }}
